#!/bin/bash

set -e

source /etc/os-release

# Create sshd daemon
mkdir -p /opt/gitlab/sv/sshd/supervise /opt/gitlab/sv/sshd/log/supervise
mkfifo /opt/gitlab/sv/sshd/supervise/ok /opt/gitlab/sv/sshd/log/supervise/ok
printf "#!/bin/sh\nexec 2>&1\numask 077\nexec /usr/sbin/sshd -D -f /assets/sshd_config -e" > /opt/gitlab/sv/sshd/run
printf "#!/bin/sh\nexec svlogd -tt /var/log/gitlab/sshd" > /opt/gitlab/sv/sshd/log/run
chmod a+x /opt/gitlab/sv/sshd/run /opt/gitlab/sv/sshd/log/run
mkdir -p /var/run/sshd

# Remove current gitlab.rb file
rm -f /etc/gitlab/gitlab.rb

# Patch omnibus package
sed -i "s/external_url 'GENERATED_EXTERNAL_URL'/# external_url 'GENERATED_EXTERNAL_URL'/" /opt/gitlab/etc/gitlab.rb.template
sed -i "s/\/etc\/gitlab\/gitlab.rb/\/assets\/gitlab.rb/" /opt/gitlab/embedded/cookbooks/gitlab/recipes/show_config.rb
sed -i "s/\/etc\/gitlab\/gitlab.rb/\/assets\/gitlab.rb/" /opt/gitlab/embedded/cookbooks/gitlab/recipes/config.rb

groupadd -g 998 git

useradd -m -u 1001 -g 0 -m -s /bin/sh -d /var/opt/gitlab git

# Copy gitlab.rb for the first time
if [[ ! -e /etc/gitlab/gitlab.rb ]]; then
        echo "Installing gitlab.rb config..."
        cp /opt/gitlab/etc/gitlab.rb.template /etc/gitlab/gitlab.rb
fi

# Generate ssh host key for the first time
if [[ ! -f /etc/gitlab/ssh_host_rsa_key ]]; then
        echo "Generating ssh_host_rsa_key..."
        ssh-keygen -f /etc/gitlab/ssh_host_rsa_key -N '' -t rsa
fi
if [[ ! -f /etc/gitlab/ssh_host_ecdsa_key ]]; then
        echo "Generating ssh_host_ecdsa_key..."
        ssh-keygen -f /etc/gitlab/ssh_host_ecdsa_key -N '' -t ecdsa
fi
if [[ ! -f /etc/gitlab/ssh_host_ed25519_key ]]; then
        echo "Generating ssh_host_ed25519_key..."
        ssh-keygen -f /etc/gitlab/ssh_host_ed25519_key -N '' -t ed25519
fi

# Remove all services, the reconfigure will create them
echo "Preparing services..."
rm -f /opt/gitlab/service/*
ln -s /opt/gitlab/sv/sshd /opt/gitlab/service
ln -sf /opt/gitlab/embedded/bin/sv /opt/gitlab/init/sshd
mkdir -p /var/log/gitlab/sshd

# Start service manager
echo "Starting services..."
GITLAB_OMNIBUS_CONFIG= /opt/gitlab/embedded/bin/runsvdir-start &

echo "Configuring GitLab..."
gitlab-ctl reconfigure

# Make sure PostgreSQL is at the latest version.
# If it fails, print a message with a workaround and exit
if [ "${GITLAB_SKIP_PG_UPGRADE}" != true ]; then
    gitlab-ctl pg-upgrade -w || failed_pg_upgrade
fi

if [ -n "${GITLAB_POST_RECONFIGURE_SCRIPT+x}" ]; then
  echo "Runnning Post Reconfigure Script..."
  eval "${GITLAB_POST_RECONFIGURE_SCRIPT}"
fi

chmod -R a+rwx /opt/gitlab
chown -R 1001:0 /opt/gitlab

chmod -R a+rwx /var/run/sshd
chown -R 1001:0 /var/run/sshd

chmod -R a+rwx /etc/gitlab
chown -R 1001:0 /etc/gitlab

chmod -R a+rwx /var/log/gitlab
chown -R 1001:0 /var/log/gitlab
